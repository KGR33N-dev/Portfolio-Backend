services:
  app:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env.production
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres_user}:${POSTGRES_PASSWORD:-CHANGE_DB_PASSWORD_HERE}@db:5432/${POSTGRES_DB:-portfolio_prod}
      - FRONTEND_URL=${FRONTEND_URL:-https://kgr33n.com}
      - PRODUCTION_FRONTEND=${PRODUCTION_FRONTEND:-https://kgr33n.com}
      - SECRET_KEY=${SECRET_KEY}
      - ENVIRONMENT=production
      - DEBUG=False
    restart: unless-stopped
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production PostgreSQL with persistent data
  db:
    image: postgres:15-alpine
    env_file:
      - .env.production
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-portfolio_prod}
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-CHANGE_DB_PASSWORD_HERE}
      # Set the default postgres user password too
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./init-postgres.sh:/docker-entrypoint-initdb.d/01-init-user.sh:ro
    restart: unless-stopped
    ports:
      - "5432:5432"  # Expose for debugging if needed
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ${POSTGRES_DB:-portfolio_prod}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  postgres_prod_data:
    driver: local
